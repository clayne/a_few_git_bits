
Write good commit messages

    * having the diff as you write the commit message helps

    * prevent "commit rot", tell me why not just what
        * why was this commit made? ("fix bug"? why were they bugs?)
        * should i revert it. it looks wrong? (i'm not sure that bug was a bug)
        * maybe i will go bug the original author (interruptions are bad, no?)

    * that includes merge commits and reverts (for example...)

    * your commit messages will outlive your issue tracker(s)
        * so a ticket reference is not sufficient

    * your average commit message should be around 300 bytes
        * most open source commit messages are < 120 (github_trending_repo_cmb.sh)

    * if you're making many small commits then WIP and squash (previous slide)

    * commit messages can serve as excellent documentation (in blame and log)
        * they are *immutably* linked to the change

    * like several other people i've blogged about this
        * https://leejo.github.io/2013/11/03/please_use_verbose_commits/
